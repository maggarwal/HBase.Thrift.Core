# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
  buildConfiguration: 'Release'
  workingDirectory: '$(Build.SourcesDirectory)'
  packageDirectory: '$(Build.SourcesDirectory)/hbase-core/bin/Release/'
  nuget.apikey: 'oy2mfjtbctglqdcnx24q23ccslyapcyebcivevefcoa4ii'
  nugetSource: 'https://api.nuget.org/v3/index.json'

name: 1.0.0$(Rev:.r)

trigger:
  batch: true
  branches:
    include: ['master']

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '3.x'

- script: dotnet build ./*.sln --configuration $(buildConfiguration)
  displayName: Build
  workingDirectory: $(workingDirectory)

- task: DotNetCoreCLI@2
  inputs:
    command: 'pack'
    packagesToPack: '**/HBase.Thrift.Core.csproj'
    versioningScheme: 'byBuildNumber'
    verbosityPack: 'Normal'

# - task: NuGetCommand@2
#   inputs:
#     command: 'pack'
#     packagesToPack: '**/HBase.Thrift.Core.csproj'
#     versioningScheme: 'byBuildNumber'
#     buildProperties: '-MSBuildVersion 16.0'
    
- task: DotNetCoreCLI@2
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'Nuget'
# - task: NuGetCommand@2
#   inputs:
#     command: 'push'
#     packagesToPush: '$(Build.ArtifactStagingDirectory)*.nupkg'
#     nuGetFeedType: 'external'
#     publishFeedCredentials: 'Nuget'